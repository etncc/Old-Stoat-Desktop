name: Build Packages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:

 build-windows:
 
  runs-on: windows-latest

  steps:
    - uses: actions/checkout@v4

    - name: Enable Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1.12.1

    - name: Install Yarn
      run: yarn install

    - name: Build For Windows
      run: |
        yarn build:bundle
        yarn build:windows --publish never

    - name: Debug dist folder
      shell: powershell
      run: |
        Get-ChildItem -Recurse "$env:GITHUB_WORKSPACE\dist"

    - name: Pack Build Files
      shell: powershell
      run: |
        New-Item -ItemType Directory -Path "$env:GITHUB_WORKSPACE\Stoat-windows"
        Move-Item -Path "$env:GITHUB_WORKSPACE\dist\win-unpacked\*" -Destination "$env:GITHUB_WORKSPACE\Stoat-windows"

        New-Item -ItemType Directory -Path "$env:GITHUB_WORKSPACE\Stoat-windows-Setup"
        Move-Item -Path "$env:GITHUB_WORKSPACE\dist\*.exe" -Destination "$env:GITHUB_WORKSPACE\Stoat-windows-Setup"

        New-Item -ItemType Directory -Path "$env:GITHUB_WORKSPACE\Stoat-windows-appx"
        Move-Item -Path "$env:GITHUB_WORKSPACE\dist\*.appx" -Destination "$env:GITHUB_WORKSPACE\Stoat-windows-appx"

    - name: Publish Zipfile
      uses: actions/upload-artifact@v4
      with:
        path: ${{ github.workspace }}\Stoat-windows
        name: Stoat-windows

    - name: Publish Installer
      uses: actions/upload-artifact@v4
      with:
        path: ${{ github.workspace }}\Stoat-windows-Setup
        name: Stoat-windows-Setup

    - name: Publish Appx
      uses: actions/upload-artifact@v4
      with:
        path: ${{ github.workspace }}\Stoat-windows-appx
        name: Stoat-windows-appx

 build-linux:
  runs-on: ubuntu-latest

  steps:
    - uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        yarn install

    - name: Build For Linux
      run: |
        yarn build:bundle
        yarn build:linux --publish never

    - name: Debug dist folder
      run: ls -R dist

    - name: Pack AppImage and Tarball
      run: |
        mkdir -p $GITHUB_WORKSPACE/Stoat-linux-AppImage
        mv dist/*.AppImage $GITHUB_WORKSPACE/Stoat-linux-AppImage || echo "No .AppImage found"

        mkdir -p $GITHUB_WORKSPACE/Stoat-linux
        mv dist/*.tar.gz $GITHUB_WORKSPACE/Stoat-linux || echo "No .tar.gz found"

    - name: Publish AppImage
      uses: actions/upload-artifact@v4
      with:
        path: ${{ github.workspace }}/Stoat-linux-AppImage
        name: Stoat-linux-AppImage

    - name: Publish Tarfile
      uses: actions/upload-artifact@v4
      with:
        path: ${{ github.workspace }}/Stoat-linux
        name: Stoat-linux

 build-macos:
  runs-on: macos-11

  steps:
    - uses: actions/checkout@v4

    - name: Install Yarn
      run: yarn install

    - name: Build For macOS
      run: |
        yarn build:bundle
        yarn build:mac --publish never

    - name: Debug dist folder
      run: ls -R dist

    - name: Pack Build Files
      run: |
        mkdir -p "${GITHUB_WORKSPACE}/Stoat-macOS-universal"
        mv dist/*-universal.dmg "${GITHUB_WORKSPACE}/Stoat-macOS-universal" || echo "No DMG found"

    - name: Publish Build Files
      uses: actions/upload-artifact@v4
      with:
        path: ${{ github.workspace }}/Stoat-macOS-universal
        name: Stoat-macOS-universal
